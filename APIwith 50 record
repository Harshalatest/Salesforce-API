@RestResource(urlMapping='/TestApi2/*') 
global with sharing class TestApi2 {

    @HttpGet
    global static void doGet() {
        RestRequest req = RestContext.request;
        
        //set status code
        RestContext.response.statusCode = 200;
        String LicId = req.requestURI.substring(req.requestURI.lastIndexOf('/')+1);
        Integer offset = 0; 
        List<License__c> result = new List<License__c>();
        Integer totalRecords = 0;
        Boolean done = false;
        
        //retrieve and add records to the final result 
        while (!done) {
            // retrieve a batch of records
            List<License__c> batch = [SELECT Id, Name, CreatedDate,License_Type__c, license_subtype__c,Issue_Date__c,Expiration_Date__c,Status__c,
                                     Sub_status__c,Renewed_Through__c,Primary_Licensee__c,Email__c,Licensee_Phone__c,Doing_Business_As__c,
                                     //Account 
                                     Primary_Licensee__r.Name,Primary_Licensee__r.doing_business_as__c,Primary_Licensee__r.Ownership,
                                     Primary_Licensee__r.Email__c,Primary_Licensee__r.ROC_Address__c,Primary_Licensee__r.ROC_Unit__c,
                                     Primary_Licensee__r.ROC_City__c,Primary_Licensee__r.ROC_State_Province__c,Primary_Licensee__r.ROC_Zip_Postal_Code__c,
                                     Primary_Licensee__r.ROC_Country__c,Primary_Licensee__r.Phone,Primary_Licensee__r.Mobile__c
                              FROM License__c 
                                     Where Status__c='Active'
                                      LIMIT 45
                                      OFFSET :offset
                                     ];
            // add the records to the final result
            result.addAll(batch);
            
            // increment the offset
            offset += 50;
            totalRecords += batch.size();
            // check if all records have been retrieved
            if (batch.size() < 50) {
                done = true;
            }
        }
        //set the body of the response
        Map<String, Object> response = new Map<String, Object>();
        response.put('records', result);
        response.put('totalRecords', totalRecords);
        //response.put('Link', link );
        RestContext.response.responseBody = Blob.valueOf(JSON.serialize(response));
    }
}
